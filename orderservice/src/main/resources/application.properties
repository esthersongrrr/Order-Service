spring.application.name=orderservice
server.port=8000

# Cassandra configuration
spring.cassandra.local-datacenter=DC1
spring.cassandra.keyspace-name=order_service
# Matches the service name in docker
spring.cassandra.contact-points=cassandra-1
spring.cassandra.port=9042
spring.cassandra.schema-action=create_if_not_exists
#spring.cassandra.request.timeout=10s
#spring.cassandra.connection.connect-timeout=10s
#spring.cassandra.connection.init-query-timeout=10s


# Kafka Producer Configurations
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer


# Kafka Consumer Configurations
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=order-service-group
spring.kafka.consumer.auto-offset-reset=earliest

# Deserializers
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Trust all packages - use it with caution
spring.kafka.consumer.properties.spring.json.trusted.packages=*

#kafka.topic.name=order